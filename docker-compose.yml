version: '3.8'

services:
  # PostgreSQL database (for production-like setup)
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: billing_user
      POSTGRES_PASSWORD: billing_pass
      POSTGRES_DB: billing_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U billing_user -d billing_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://billing_user:billing_pass@db:5432/billing_db
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-me-in-production}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server:/app
    restart: unless-stopped

volumes:
  postgres_data:

